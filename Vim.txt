x 删除当前光标所在的一个字符
:wq 存盘+退出（:w 存盘 :q 退出）
dd 删除当前行，并把删除的行存到剪贴板里
p 粘贴剪贴板
a 在光标后插入
o 在当前行后插入一个新行
O 在当前行前插入一个新行
cw 替换从光标所在位置后到一个单词结尾的字符
0 数字键，到行头
^ 到本行第一个不是blank字符的位置（blank即空格，tab，换行，回车等）
$ 到行尾
g_ 到本行最后一个不是blank字符的位置
/pattern 搜索pattern字符串（如果结果有多个，按n键可到下一个）
p/P 粘贴（p表示在当前位置之后，P表示在当前位置之前）
yy 拷贝当前行 相当于ddp
u undo
<C-r> redo
:e <path/to/file> 打开一个文件
:w 存盘
saveas <path/to/file> 另存为<path/to/file>
:x, ZZ 或:wq 保存并退出（:x 表示仅在需要时保存，ZZ不需要输入冒号并回车）
:q! 退出不保存 :qa! 强行退出所有的正在编辑的文件，就算别的文件有更改
:bn 和 :bp
你可以同时打开很多文件，使用这两个命令来切换下一个或上一个文件。（:n
也可以到下一个文件）
. 可以重复上一次的命令
N<command> 重复某个命令N次
NG 到第N行 :N 到第N行
gg 到第一行
G 到最后一行
按单词移动：
w 到下一个单词的开头
e 到一个单词的结尾
% 匹配括号移动，包括(,{,[ （你需要先将光标移到括号上） ],},)
*和#
匹配光标当前所在的单词，移动光标到下一个（或上一个）匹配单词（*是下一个，#是上一个）
很多命令都可以如下来干：
<start position><command><end position>
例如 0y$ 意味着：
0 先到行头
y 从这里开始拷贝
$ 拷贝到本行最后一个字符
输入ye 从当前位置拷贝到本单词的最后一个字符
输入y2/foo 来拷贝2个"foo" 之间的字符串
还有下面的命令也会被拷贝：
d 删除
v 可视化选择
gU 变大写
gu 变小写
0 到行头
^ 到本行的第一个非blank字符
$ 到行尾
g_ 到本行最后一个不是blank字符的位置
fa 到下一个为a的字符处
t, 到逗号前的第一个字符，逗号也可以变成其他字符
3fa 在当前行查找第三个出现的a
F 和 T 和 f 和 t 一样，只不过是相反方向
dt" 删除所有的内容，知道遇到双引号

区域选择<action>a<object>或<action>i<object>
其中：
	action 可以是任何命令，如d（删除）y（拷贝）v（可视模式选择）
	object 可能是 w 一个单词， W 一个以空格为分隔的单词，s 一个句子，p 一个段落。也可以是一个特别的字符："、'、)、}、]。

假设你有一个字符串(map (+) ("foo")).而光标键在第一o的位置
vi" 会选择foo.
va" 会选择"foo".
vi) 会选择"foo".
va) 会选择("foo").
v2i) 会选择map (+) ("foo").
v2a) 会选择(map (+) ("foo")).

块操作：<C-v>
块操作，典型的操作：0 <C-v> <C-d> I-- [ESC]
^ 到行头
<C-v> 开始块操作
<C-d> 向下移动（你也可以使用hjkl来移动光标，或是使用%，或是别的）
I-- [ESC] I是插入，插入"--"，按ESC键来位每一行都生效。

自动提示：<C-n> 和 <C-p>
在Insert模式下，你可以输入一个词的开头，然后按<C-n> 或是 <C-p> 来实现自动补齐

宏录制：qa 操作序列q, @a, @@
	qa 把你的操作记录在寄存器a
	于是@a 会replay 被记录的宏
	@@ 时一个快捷键用来 replay 最新记录的宏


可视化选择：v, V, <C-v>
一旦选择好后，可以做下面的事

J 把所有的行连接起来（变成一行）
<或> 左右缩进
= 自动给缩进

在所有被选择的行后加上点东西：
<C-v>
选中相关的行
$ 到行最后
A 输入字符串，按ESC

分屏：:split 和 vsplit
:split 创建分屏（:vsplit 创建垂直分屏）
<C-w><dir>：dir 就是方向，可以是hjkl 或是 ←↑↓→，用来切换分屏
<C-w>_(或<C-w>|)：最大化尺寸(<C-w>| 垂直分屏)
<C-w>+(或<C-w>-)：增加尺寸

跟改.vimrc 可以自定义配置

http://www.zhihu.com/question/20833248
123